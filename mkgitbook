#! /usr/bin/perl
#
#   Builds gitbook project from supplied text
#   Outputs gitbook/chapter1.md, gitbook/chapter2.md, etc.
#
use feature 'say';
bookmarks_load ();

#   Autoflush output to console
$| = 1;

mkdir ("gitbook");
open  SUMMARY, ">gitbook/SUMMARY.md";
print SUMMARY "# Summary\n";

while (<>) {
    chop while /\s$/;
    if (/^\#/) {
        #   Comment
    }
    elsif (/(\S+)=(.*)/) {
        #   Symbol definition
        $symbols {$1} = $2;
    }
    elsif (/(\S+)/) {
        #   Source file to include
        process_source ($1);
    }
}

#   Create cover page
open OUTPUT, ">gitbook/README.md";

writeln (<< ".");
<center><h1>%TITLE%</h1></center>
<center><h2>%SUBTITLE%</h2></center>
<center><h2>%AUTHOR%</h2></center>

­%DEDICATION%. %COPYRIGHT%. %EDITION%. %LICENSE%. %TRADEMARKS%. %CREDITS1%. %CREDITS2%.

[Buy Kindle or paperback now at Amazon.com](%PURCHASE%)

%ISBN%

%BIOGRAPHY%

%OTHERBOOKS%
.

bookmarks_save ();
exit (0);

sub process_source {
    local ($filename) = @_;
    die "Can't read $filename: $!"
        unless open (FILE, $filename);

    while (<FILE>) {
        chop while /\s$/;
        if (/^\/\/ kate/) {
            #   Kate hint
        }
        elsif (/^\./) {
            #   Process directive
            if (/^\.end/) {
                last;
            }
            elsif (/^\.bookmark\s+(\w.*)/) {
                $anchor = $1;
            }
            else {
                print "Illegal directive $_ at line $.\n";
            }
        }
        elsif (/^\+\s+Preface/) {
            writeln ("# Preface");
            print SUMMARY "* [Preface](preface.md)\n";
            open OUTPUT, ">gitbook/preface.md";
        }
        elsif (/^\+\s+Postface/) {
            writeln ("# Postface");
            print SUMMARY "* [Postface](postface.md)\n";
            open OUTPUT, ">gitbook/postface.md";
        }
        elsif (/^\+\s+Appendix: (.*)$/) {
            $bookmarks {$anchor} = $1 if $anchor;
            $documents {$anchor} = $symbols {TITLE};
            $appendix++;
            print SUMMARY "* [Appendix $appendix](appendix$appendix.md)\n";
            open OUTPUT, ">gitbook/appendix$appendix.md";
            writeln ("# Appendix $appendix: $1");
        }
        elsif (/^\+\s+(.*)$/) {
            $bookmarks {$anchor} = $1 if $anchor;
            $documents {$anchor} = $symbols {TITLE};
            $chapter++;
            print SUMMARY "* [Chapter $chapter - $1](chapter$chapter.md)\n";
            open OUTPUT, ">gitbook/chapter$chapter.md";
            writeln ("# Chapter $chapter. $1");
        }
        elsif (/^\+\+\s+(.*)$/) {
            writeln ("## $1");
        }
        elsif (/^\+\+\+\s+(.*)$/) {
            writeln ("### $1");
        }
        elsif (/^#\s+(.*)$/) {
            writeln ("1. $1");
        }
        elsif (/\|\|/) {
            s/\|\|/|/g;
            writeln ($_);
        }
        else {
            writeln ($_);
        }
    }
    writeln ("");
}

#   Writes $_ to OUTPUT after expanding all symbols
sub writeln {
    local ($_) = @_;

    #   Translate bookmark references
    while (/\[#(\S+)\]/) {
        print "Undefined bookmark: $1\n"
            unless defined ($bookmarks {$1});
        $_ = "$`“$bookmarks{$1}”$'";
    }
    #   Substitute template variables %NAME%
    while (/%([A-Z0-9_]+)%/) {
        $_ = $`.$symbols {$1}.$';
    }
    #   Translate character styles
    s/(^|[^:])\/\/(\S[^\/]+)\/\//$1*$2*/g;

    #   Translate normal hyperlinks
    s/\[(http(s)?:\/\/[^ ]+) ([^\]]+)\]/[$3]($1)/g;

    print OUTPUT "$_\n";
}

#   Load bookmarks
sub bookmarks_load {
    if (open (BOOKMARKS, ".bookmarks")) {
        while (<BOOKMARKS>) {
            chop;
            if (/(\S+)\s+(.+)\|(.+)/) {
                $bookmarks {$1} = $2;
                $documents {$1} = $3;
            }
        }
        close (BOOKMARKS);
    }
}

#   Save bookmarks
sub bookmarks_save {
    if (open (BOOKMARKS, ">.bookmarks")) {
        foreach $bookmark (keys %bookmarks) {
            print BOOKMARKS "$bookmark $bookmarks{$bookmark}|$documents{$bookmark}\n";
        }
        close (BOOKMARKS);
    }
}
